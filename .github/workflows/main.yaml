name: Build

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'The name of the branch to build.'
        default: 'maintenance-3.0.x'
        required: true
      skip_cross_repo_check:
        description: 'Skip cross repo check'
        default: 'false'
        type: boolean
        required: false
      id:
        description: 'run identifier'
        default: 'maintenance-3.0.x'
        type: string
        required: false

env:
  REFERENCE_BRANCH: maintenance-3.0.x

jobs:
  setup:
    name: Workflow ID ${{ github.event.inputs.id }}
    runs-on: ubuntu-latest
    outputs:
      elements_branch: ${{ steps.pick_nuxeo_elements_branch.outputs.branch }}
    steps:
      - name: ${{ github.event.inputs.id }}
        run: echo run identifier ${{ github.event.inputs.id }}

      - name: Determine nuxeo-elements branch to use
        id: pick_nuxeo_elements_branch
        run: |
          if git ls-remote --exit-code --heads https://github.com/nuxeo/nuxeo-elements ${{ github.event.inputs.branch_name }}; then
            echo ::set-output name=branch::${{ github.event.inputs.branch_name }}
          else
            echo ::set-output name=branch::${{ env.REFERENCE_BRANCH }}
          fi
    
  lint:
    needs: setup
    uses: nuxeo/nuxeo-elements/.github/workflows/lint.yaml@test-reusable-wf
    secrets:
      NPM_PACKAGES_TOKEN: ${{ secrets.NPM_PACKAGES_TOKEN }}

  test:
    needs: setup
    uses: nuxeo/nuxeo-elements/.github/workflows/test.yaml@test-reusable-wf
    secrets:
      NPM_PACKAGES_TOKEN: ${{ secrets.NPM_PACKAGES_TOKEN }}
      SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
    with:
      branch: ${{ needs.setup.outputs.elements_branch }}

  storybook:
    needs: setup
    uses: nuxeo/nuxeo-elements/.github/workflows/storybook.yaml@test-reusable-wf
    secrets:
      NPM_PACKAGES_TOKEN: ${{ secrets.NPM_PACKAGES_TOKEN }}
    with:
      branch: ${{ needs.setup.outputs.elements_branch }}

  cross-repo-check:
    needs: setup
    if: ${{ github.event.inputs.skip_cross_repo_check == 'false' }}
    uses: nuxeo/nuxeo-elements/.github/workflows/cross-repo.yaml@test-reusable-wf
    secrets:
      WEBUI_ACCESS_TOKEN_PERSONAL: ${{ secrets.WEBUI_ACCESS_TOKEN_PERSONAL }}
    with:
      branch: ${{ needs.setup.outputs.elements_branch }}

    # - name: Install
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_PACKAGES_TOKEN }}
    #   run: |
    #     npm install --no-package-lock
    #     npm run bootstrap

    # - name: Lint
    #   run: npm run lint

    # - name: Test
    #   env:
    #     SAUCE_USERNAME: nuxeo-elements
    #     SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
    #   run: npm run test

    # - name: Run analysis
    #   run: npx lerna run analysis --parallel

    # - name: Build storybook
    #   working-directory: storybook
    #   run: |
    #     npx build-storybook -o dist -s ./public

# name: Build

# on:
#   push:
#     branches:
#       - maintenance-3.0.x
#   pull_request:

# jobs:
#   # trigger-workflow-js:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v2

#       # - name: Install the trigger-workflow-js action dependencies
#       #   run: |
#       #     pushd .github/actions/trigger-workflow-js
#       #     npm install
#       #     popd

#       # - name: Trigger the workflow using the javascript action
#       #   id: hello
#       #   uses: ./.github/actions/trigger-workflow-js
#       #   with:
#       #     webui-access-token: ${{ secrets.WEBUI_ACCESS_TOKEN_PERSONAL }} # TODO - we need to get a token for this
#       #     branch-name: ${{ github.head_ref }}
#       # # Use the output from the `hello` step
#       # - name: Get the output time
#       #   run: echo "The time was ${{ steps.hello.outputs.time }}"

#   # cross-repo-check:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v2

#   #     - uses: ./.github/actions/trigger-workflow
#   #       with:
#   #         owner: nuxeo
#   #         repo: nuxeo-web-ui
#   #         github_token: ${{ secrets.WEBUI_ACCESS_TOKEN_PERSONAL }}
#   #         workflow_file_name: ondemand-main.yaml
#   #         ref: maintenance-3.0.x
#   #         inputs: '{"branch_name": "${{ github.head_ref }}", "sauce_labs": "false","skip_ftests": "false","skip_a11y": "false","skip_unit_tests": "false","generate_metrics": "false","run_all": "false","bail": "0"}'
#   #         wait_interval: 240
#   #         propagate_failure: true
#   #         trigger_workflow: true
#   #         wait_workflow: true

#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - uses: actions/setup-node@v1
#         with:
#           node-version: 12
#           registry-url: 'https://packages.nuxeo.com/repository/npm-public/'
#           scope: '@nuxeo'

#       - name: Prepare environment
#         run: |
#           git config user.name "nuxeo-web-ui-jx-bot" && git config user.email "ui+jx-bot@nuxeo.com"
#           echo "BRANCH_NAME=${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV
#           echo "PACKAGE_VERSION=$(npx -c 'echo "$npm_package_version"')" >> $GITHUB_ENV

#       - name: Get pull request version
#         if: github.event_name == 'pull_request'
#         run: |
#           echo "VERSION=$PACKAGE_VERSION-$BRANCH_NAME" >> $GITHUB_ENV

#       - name: Get prerelease version
#         if: github.event_name == 'push'
#         run: |
#           git fetch origin --tags
#           RC_VERSION=$(git tag --sort=taggerdate --list "v${PACKAGE_VERSION/-SNAPSHOT}*" | tail -1 | tr -d '\n')
#           echo "VERSION=$(npx semver -i prerelease --preid rc ${RC_VERSION:-$PACKAGE_VERSION}  | tr -d '\n')" >> $GITHUB_ENV

#       - name: Set version to ${{ env.VERSION }}
#         run: |
#           npm version $VERSION --no-git-tag-version
#           npx lerna version $VERSION --no-push --force-publish --no-git-tag-version --yes

#       - name: Tag
#         if: github.event_name == 'push'
#         run: |
#           git commit -a -m "Release ${VERSION}"
#           git tag -a v${VERSION} -m "Release ${VERSION}"
#           git push origin v${VERSION}

#       - name: Publish
#         if: github.event_name == 'push'
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_PACKAGES_TOKEN }}
#         run: npx lerna exec --ignore @nuxeo/nuxeo-elements-storybook -- npm publish --tag SNAPSHOT

#   # build:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #   - uses: actions/checkout@v2

#   #   - uses: actions/setup-node@v1
#   #     with:
#   #       node-version: 12
#   #       registry-url: 'https://packages.nuxeo.com/repository/npm-public/'
#   #       scope: '@nuxeo'

#   #   - name: Prepare environment
#   #     run: |
#   #       git config user.name "nuxeo-web-ui-jx-bot" && git config user.email "ui+jx-bot@nuxeo.com"
#   #       echo "BRANCH_NAME=${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV
#   #       echo "PACKAGE_VERSION=$(npx -c 'echo "$npm_package_version"')" >> $GITHUB_ENV

#   #   - name: Get pull request version
#   #     if: github.event_name == 'pull_request'
#   #     run: |
#   #       echo "VERSION=$PACKAGE_VERSION-$BRANCH_NAME" >> $GITHUB_ENV

#   #   - name: Get prerelease version
#   #     if: github.event_name == 'push'
#   #     run: |
#   #       git fetch origin --tags
#   #       RC_VERSION=$(git tag --sort=taggerdate --list "v${PACKAGE_VERSION/-SNAPSHOT}*" | tail -1 | tr -d '\n')
#   #       echo "VERSION=$(npx semver -i prerelease --preid rc ${RC_VERSION:-$PACKAGE_VERSION}  | tr -d '\n')" >> $GITHUB_ENV

#   #   - name: Set version to ${{ env.VERSION }}
#   #     run: |
#   #       npm version $VERSION --no-git-tag-version
#   #       npx lerna version $VERSION --no-push --force-publish --no-git-tag-version --yes

#   #   - name: Install
#   #     env:
#   #       NODE_AUTH_TOKEN: ${{ secrets.NPM_PACKAGES_TOKEN }}
#   #     run: |
#   #       npm install --no-package-lock
#   #       npm run bootstrap

#   #   - name: Lint
#   #     run: npm run lint

#   #   - name: Test
#   #     env:
#   #       SAUCE_USERNAME: nuxeo-elements
#   #       SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
#   #     run: npm run test

#   #   - name: Run analysis
#   #     run: npx lerna run analysis --parallel

#   #   - name: Build storybook
#   #     working-directory: storybook
#   #     run: |
#   #       npx build-storybook -o dist -s ./public

#   #   - name: Deploy
#   #     if: github.ref == 'refs/heads/maintenance-3.0.x'
#   #     env:
#   #       GH_TOKEN: ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
#   #     working-directory: storybook
#   #     run: npm run deploy -- --ci

#   #   - name: Tag
#   #     if: github.event_name == 'push'
#   #     run: |
#   #       git commit -a -m "Release ${VERSION}"
#   #       git tag -a v${VERSION} -m "Release ${VERSION}"
#   #       git push origin v${VERSION}

#   #   - name: Publish
#   #     if: github.event_name == 'push'
#   #     env:
#   #       NODE_AUTH_TOKEN: ${{ secrets.NPM_PACKAGES_TOKEN }}
#   #     run: npx lerna exec --ignore @nuxeo/nuxeo-elements-storybook -- npm publish --tag SNAPSHOT
