(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{1554:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="\x3c!-- XXX: stub for the <nuxeo-results> element because it's still part of the nuxeo/nuxeo-web-ui repo. --\x3e\n\x3c!-- (to be reviewed once ELEMENTS-1321 is handled) --\x3e\n<dom-module id=\"nuxeo-results\">\n  <script>\n    function _createItem(uid, title, imageName) {\n      return {\n        uid,\n        title,\n        type: 'file',\n        contextParameters: {\n          thumbnail: {\n            url: `static/media/${imageName}.jpg`,\n          },\n        },\n      };\n    }\n    Polymer({\n      is: 'nuxeo-results',\n      properties: {\n        _defaultItems: {\n          type: Array,\n          value: [\n            _createItem('uid1', 'Swirl Blue Pink', 'image01.df0ac7ee'),\n            _createItem('uid2', 'Swirl Blue Magenta', 'image02.3c5ae515'),\n            _createItem('uid3', 'Swirl Blue Green', 'image03.7ff16f0f'),\n          ],\n        },\n      },\n      observers: ['_selectedItemsChanged(selectedItems, selectedItems.*)'],\n      fetch() {\n        // simulates a real fetch by populating the items of a table with an array of simplified filtered results\n        const searchTerm = this.nxProvider.params.title;\n        if (!searchTerm) {\n          return this._setItems(this._defaultItems);\n        }\n        const searchTermParts = searchTerm.toLowerCase().split(' ');\n        const results = this._defaultItems\n          // only include documents that contain some search term in the title\n          .filter((item) => searchTermParts.some((part) => item.title.toLowerCase().includes(part)));\n        this._setItems(results);\n      },\n      reset() {\n        // simulates a real reset by clearing the items of a table with an empty array\n        this._setItems([]);\n      },\n      _setItems(value) {\n        this.querySelector('nuxeo-data-table').items = value;\n      },\n      _selectedItemsChanged() {\n        // simulate the event so that it can be listened in the picker\n        this.fire('selected-items-changed');\n      },\n    });\n  <\/script>\n</dom-module>\n\n\x3c!--\n`nuxeo-picker-search-results`\n@group Nuxeo UI\n@element nuxeo-picker-search-results\n--\x3e\n<dom-module id=\"nuxeo-picker-search-results\">\n  <template>\n    <style include=\"nuxeo-styles\">\n      nuxeo-data-grid {\n        /* required to override the min-height defined by default on <nuxeo-data-grid> */\n        min-height: 200px;\n      }\n    </style>\n    <nuxeo-results nx-provider=\"[[nxProvider]]\" selected-items=\"{{selectedItems}}\">\n      \x3c!-- disable the default actions (eg. CSV export) --\x3e\n      <div slot=\"actions\"></div>\n      \x3c!-- disable the actions that are displayed when results are selected --\x3e\n      <div slot=\"selectionActions\"></div>\n      <nuxeo-data-table\n        class=\"results\"\n        empty-label=\"[[i18n('searchResults.noResults')]]\"\n        selection-enabled\n        icon=\"nuxeo:view-list\"\n        name=\"table\"\n        selected-items=\"{{selectedItems}}\"\n      >\n        <nuxeo-data-table-column name=\"Title\" field=\"dc:title\" sort-by=\"dc:title\" flex=\"100\">\n          <template>\n            <nuxeo-document-thumbnail document=\"[[item]]\"></nuxeo-document-thumbnail>\n            <label>[[item.title]]</label>\n          </template>\n        </nuxeo-data-table-column>\n      </nuxeo-data-table>\n    </nuxeo-results>\n  </template>\n  <script>\n    Polymer({\n      is: 'nuxeo-picker-search-results',\n      behaviors: [Nuxeo.LayoutBehavior],\n      properties: {\n        nxProvider: Object,\n      },\n    });\n  <\/script>\n</dom-module>\n"}}]);
//# sourceMappingURL=8.4c9db5f58238dcd615b0.bundle.js.map